{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Porton Health API Docs",
    "description": "Check this out!",
    "license": {
      "name": "???",
      "url": "https://?"
    }
  },
  "host": "localhost:3333",
  "basePath": "/api",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/user/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/UserRegister"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "properties":{
                "user":{
                  "type":"string",
                  "description":"user id"
                }
              }
            }
          }
        }
      }
      
    },
    "/user/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "login user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "properties":{
                "token":{
                  "type":"string",
                  "description":"a JWT records user id, user role, exp date"
                },
                "role":{
                  "type":"string",
                  "description":"user role, can be system_admin, and clinic_admin"
                }
              }
            }
          }
        }
      }
      
    },
    "/user/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        },
        {
          "name": "auth-token",
          "in":"header",
          "required":true,
          "description": "JWT contains user data",
          "type":"string"
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user with given id (under construction)",
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user with given id (under construction)",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "summary": "Update user with given id (under construction)",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/client/terminal/{terminalId}": {
      "parameters": [
        {
          "name": "terminalId",
          "in": "path",
          "required": true,
          "description": "ID of terminal that we want to find",
          "type": "string"
        },
        {
          "name": "auth-token",
          "in":"header",
          "required":true,
          "description": "JWT contains terminal data",
          "type":"string"
        }
      ],
      "get": {
        "tags": [
          "Terminals"
        ],
        "summary": "Get terminal with given id (under construction)",
        "responses": {
          "200": {
            "description": "Terminal is found",
            "schema": {
              "$ref": "#/definitions/Terminal"
            }
          }
        }
      },

      "put": {
        "summary": "Update terminal with given id (under construction)",
        "tags": [
          "Terminal"
        ],
        "parameters": [
          {
            "name": "terminal",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Terminal is updated",
            "schema": {
              "$ref": "#/definitions/terminal"
            }
          }
        }
      }
    },


    "/posts":{
      "parameters": [
        {
          "name": "auth-token",
          "in":"header",
          "required":true,
          "description": "JWT contains user data (paste your jwt here)",
          "type":"string"
        }
      ],
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "A test API for testing JWT",
        "responses": {
          "200": {
            "description": "jwt worked! :)"
          }
        }
      }

    }
  },
  "definitions": {
    "User": {
      "required": [
        "email",
        "_id"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "lastName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "items":{
        "$ref": "#/definitions/User"
      }
    },
    "UserRegister": {
      "required": [
        "email",
        "name",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true,
          "example": "sample@email.com"
        },
        "name": {
          "type": "string",
          "example": "Kimo liang"
        },
        "password": {
          "type": "string",
          "example": "password"
        }
      }
    },
    "UserLogin": {
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true,
          "example": "sample@email.com"
        },
        "password": {
          "type": "string",
          "example": "password"
        }
      }
    }
  }
}